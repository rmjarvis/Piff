name: Piff CI

on:
    push:
        branches:
            - main

    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                # First all python versions in basic linux
                os: [ ubuntu-latest ]
                py: [ 3.6, 3.7, 3.8, 3.9 ]
                CC: [ gcc ]
                CXX: [ g++ ]

                # Add some other particular combinations to test
                include:
                    # A couple in MacOS
                    - os: macos-latest
                      py: 3.7
                      CC: cc
                      CXX: c++

                    - os: macos-latest
                      py: 3.9
                      CC: cc
                      CXX: c++

                    # Check one with clang compiler
                    - os: ubuntu-latest
                      py: 3.8
                      CC: clang
                      CXX: clang++

        steps:
            - uses: actions/checkout@v2

            - name: Set up Python ${{ matrix.py }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.py }}

            - name: Cache pip
              uses: actions/cache@v2
              with:
                path: ~/.cache/pip
                key: ${{ runner.os }}-${{ matrix.py }}-pip-${{ hashFiles('requirements.txt') }}
                restore-keys: |
                    ${{ runner.os }}-${{ matrix.py }}-pip-
                    ${{ runner.os }}-

            - name: Install libfftw, etc. on linux (needed for GalSim)
              if: matrix.os == 'ubuntu-latest'
              run: |
                echo ${{ matrix.os }}
                sudo -H apt-get -qq update
                sudo -H apt-get install -y libfftw3-dev libeigen3-dev

            - name: Install libfftw, etc. on MacOS
              if: matrix.os == 'macos-latest'
              run: |
                echo ${{ matrix.os }}
                brew update
                brew install fftw eigen

            - name: Install dependencies with pip
              run: |
                python -m pip install -U pip

                # Do these first to clarify potential conflicts
                pip install -U setuptools numpy

                # Standard dependencies
                pip install -U -r requirements.txt

                # Extra packages needed for testing
                pip install -U nose codecov coverage

            - name: Install Pixmappy (not on pip)
              run: |
                git clone https://github.com/gbernstein/pixmappy.git
                cd pixmappy
                python setup.py install
                cd ..

            - name: List all installed packages for reference
              run: pip list

            - name: Enable Agg backend
              # The .matplotlib file needs to be in $HOME to work right.
              run: |
                cp -r tests/.matplotlib $HOME

            - name: Build Piff
              run: pip install -vvv .

            - name: Run unit tests
              run: |
                cd tests
                nosetests --with-coverage --cover-package=piff --with-doctest
                cd ..  # N.B. This seems to happen automatically if omitted.
                       # Less confusing to include it explicitly.

            - name: Upload coverage to codecov
              run: |
                pwd
                pwd -P
                cd tests
                ls -la
                coverage combine
                coverage report
                ls -la
                #codecov  # This didn't work.
                # cf. https://community.codecov.io/t/github-not-getting-codecov-report-after-switching-from-travis-to-github-actions-for-ci/
                # The solution was to switch to the bash uploader line instead.
                bash <(curl -s https://codecov.io/bash)
                cd ..
